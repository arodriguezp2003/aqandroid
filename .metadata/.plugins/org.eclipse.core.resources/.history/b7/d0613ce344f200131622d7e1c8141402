package com.rsdev.aquacontrol;

import java.util.HashMap;
import java.util.Map;
import org.json.JSONException;
import org.json.JSONObject;
import com.android.volley.AuthFailureError;
import com.android.volley.Request.Method;
import com.android.volley.Response;
import com.android.volley.VolleyError;
import com.android.volley.VolleyLog;
import com.android.volley.toolbox.JsonObjectRequest;
import com.rsdev.aquacontrol.app.AppController;
import android.app.Activity;
import android.app.AlertDialog;
import android.app.ProgressDialog;
import android.content.Intent;
import android.os.Bundle;
import android.os.StrictMode;
import android.util.Base64;
import android.util.Log;
import android.view.View;
import android.view.View.OnClickListener;
import android.widget.Button;
import android.widget.EditText;
import android.widget.TextView;

public class Login  extends Activity{
	 private static String tag_json_arry = "json_array_req";
	 private static  String url = "http://aquacontrol.la/api/v1/apis/autentifica/";
	 private String TAG = "JAN";
	 TextView errores ;
	@Override
	protected void onCreate(Bundle savedInstanceState) {
		// TODO Auto-generated method stub
		super.onCreate(savedInstanceState);
		setContentView(R.layout.login);
	    StrictMode.ThreadPolicy policy = new StrictMode.ThreadPolicy.Builder().permitAll().build();
	    StrictMode.setThreadPolicy(policy); 
	    
	    Button btn = (Button)findViewById(R.id.xAceptar);
	    final EditText user = (EditText)findViewById(R.id.xUsuario);
	    final EditText pass = (EditText)findViewById(R.id.xPassword);
		final ProgressDialog pDialog = new ProgressDialog(Login.this);
		errores = (TextView)findViewById(R.id.lAlerta);
		
		 btn.setOnClickListener(new OnClickListener() {
				
				@Override
				public void onClick(View v) {
					String _user = user.getText().toString().trim();
					String _pass = pass.getText().toString().trim();
					if(_user.isEmpty())
					{
						errores.setText("Ingrese Datos");
						errores.setVisibility(View.VISIBLE);
						return;
					}
					if(_pass.isEmpty())
					{
						errores.setText("Ingrese Datos");
						errores.setVisibility(View.VISIBLE);
						return;
					
					}
					String url2 = url + _user.toString() + "/" + _pass.toString();
					pDialog.setMessage("Cargando...");
					pDialog.show();  
					
					JsonObjectRequest jsonObjReq = new JsonObjectRequest(Method.GET,
			                url2, null,
			                new Response.Listener<JSONObject>() {
			 
			                    @Override
			                    public void onResponse(JSONObject response) {
			                        Log.d(TAG, response.toString());
			                        try {
										String error = response.getString("error");
										int es =  Integer.parseInt(error);
										if(es==1)
										{/*
											AlertDialog alertDialog = new AlertDialog.Builder(Login.this).create();
										    alertDialog.setTitle("Login");
										    alertDialog.setMessage("El Usuario a la Contraseña es Invalida");
															        alertDialog.setIcon(R.drawable.ic_launcher);
										    alertDialog.show();*/
											errores.setText("El Usuario o la Contraseña es Invalida");
											errores.setVisibility(View.VISIBLE);
									
										    pDialog.hide();
											return ;
										}
										} catch (JSONException e) {
										
										e.printStackTrace();
									}
			                       			                        
			                        pDialog.hide();
			                        errores.setVisibility(View.GONE);
			                        startActivity(new Intent(Login.this,MainActivity.class));
			                    }
			                }, new Response.ErrorListener() {
			 
			                    @Override
			                    public void onErrorResponse(VolleyError error) {
			                        VolleyLog.d(TAG, "Error: " + error.getMessage());
			                        pDialog.hide();
			                    }
			                }){
						 @Override
						   public Map<String, String> getHeaders() throws AuthFailureError 
						   {
				                HashMap<String, String> headers = new HashMap<String, String>();
				                headers.put("Content-Type", "application/json");
				                headers.put("Authorization", getB64Auth("android", "1"));
				                return headers;
				            }
						  private String getB64Auth (String login, String pass) 
						  {
					    	   String source=login+":"+pass;
					    	   String ret="Basic "+Base64.encodeToString(source.getBytes(),Base64.URL_SAFE|Base64.NO_WRAP);
					    	   return ret;
					      }
					};

			// Adding request to request queue
			AppController.getInstance().addToRequestQueue(jsonObjReq, tag_json_arry);
				}
			});
		
	}
}
